{"version":3,"sources":["logo.svg","lookup/component.js","tweets/lookup.js","tweets/create.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/list.js","tweets/feed.js","tweets/component.js","App.js","reportWebVitals.js","index.js"],"names":["backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","message","console","log","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","TweetCreate","props","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","className","onSubmit","event","preventDefault","newVal","current","value","content","ref","required","ActionBtn","tweet","action","didPerformACtion","likes","actionDiplay","display","handleActionBackendEvent","type","onClick","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDispaly","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urltweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","next","results","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container"],"mappings":"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","file":"static/js/main.c69af59b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== \"\") {\r\n    var cookies = document.cookie.split(\";\");\r\n    for (var i = 0; i < cookies.length; i++) {\r\n      var cookie = cookies[i].trim();\r\n      // Does this cookie string begin with the name we want?\r\n      if (cookie.substring(0, name.length + 1) === name + \"=\") {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n  const xhr = new XMLHttpRequest();\r\n  const url = `http://127.0.0.1:8000/api${endpoint}`;\r\n  xhr.responseType = \"json\";\r\n  const csrftoken = getCookie(\"csrftoken\");\r\n  xhr.open(method, url);\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n  if (csrftoken) {\r\n    // xhr.setRequestHeader(\"HTTP_X_REQUSETED_WITH\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\r\n  }\r\n  xhr.onload = function () {\r\n    if (xhr.status === 403 && xhr.response) {\r\n      const detail = xhr.response.detail;\r\n      if (detail === \"Authentication credentials were not provided.\") {\r\n        if (window.location.href.indexOf(\"login\") === -1) {\r\n          window.location.href = \"/login?showLoginRequired=true\";\r\n        }\r\n      }\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n  xhr.onerror = function (e) {\r\n    callback({ message: \"The request was an error\" }, 400);\r\n  };\r\n  console.log(jsonData);\r\n  xhr.send(jsonData);\r\n}\r\n","import { backendLookup } from \"../lookup\";\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n  backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n  const data = { id: tweetId, action: action };\r\n  backendLookup(\"POST\", \"/tweets/action\", callback, data);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n  backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\r\n}\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n  let endpoint = \"/tweets/feed/\";\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api\", \"\");\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n  let endpoint = \"/tweets/\";\r\n  if (username) {\r\n    endpoint = `/tweets/?username=${username}`;\r\n  }\r\n\r\n  if (nextUrl !== null && nextUrl !== undefined) {\r\n    endpoint = nextUrl.replace(\"http://127.0.0.1:8000/api\", \"\");\r\n  }\r\n  backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\n","import React from \"react\";\r\nimport { apiTweetCreate } from \"./lookup\";\r\n\r\nexport function TweetCreate(props) {\r\n  const textAreaRef = React.createRef();\r\n  const { didTweet } = props;\r\n  const handleBackendUpdate = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      console.log(response);\r\n      alert(\"An error occured please try again \");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newVal = textAreaRef.current.value;\r\n    apiTweetCreate(newVal, handleBackendUpdate);\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          ref={textAreaRef}\r\n          required={true}\r\n          className=\"form-control\"\r\n          name=\"tweet\"\r\n        ></textarea>\r\n        <button className=\"btn btn-primary my-3\">Tweet</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n  const { tweet, action, didPerformACtion } = props;\r\n\r\n  const likes = tweet.likes ? tweet.likes : 0;\r\n\r\n  const className = props.className\r\n    ? props.className\r\n    : \"btn btn-primary btn-sm\";\r\n  const actionDiplay = action.display ? action.display : \"Action\";\r\n\r\n  const handleActionBackendEvent = (response, status) => {\r\n    console.log(response, status);\r\n    if ((status === 200 || status === 201) && didPerformACtion) {\r\n      // setLikes(response.likes);\r\n      didPerformACtion(response, status);\r\n      // setUserLike(true);\r\n    }\r\n  };\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n  };\r\n  const display =\r\n    action.type === \"like\" ? `${likes} ${actionDiplay}` : actionDiplay;\r\n\r\n  return (\r\n    <button className={className} onClick={handleClick}>\r\n      {display}\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function UserLink(props) {\r\n  const { username } = props;\r\n  const handleUserlink = (event) => {\r\n    window.location.href = `/profiles/${username}`;\r\n  };\r\n  return (\r\n    <span className=\"pointer\" onClick={handleUserlink}>\r\n      {props.children}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport function UserDisplay(props) {\r\n  const { user, includeFullName } = props;\r\n  const nameDispaly =\r\n    includeFullName === true ? `${user.first_name} ${user.last_name}` : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {nameDispaly}\r\n      <UserLink username={user.username}>@{user.username}</UserLink>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport function UserPicture(props) {\r\n  const { user } = props;\r\n  return (\r\n    <UserLink username={user.username}>\r\n      <span className=\"mx-1 px-3 py-2 rounded-circle bg-dark text-white\">\r\n        {user.username[0]}\r\n      </span>\r\n    </UserLink>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport { ActionBtn } from \"./buttons\";\r\nimport { UserDisplay, UserPicture } from \"../profiles/components\";\r\n\r\nexport function ParentTweet(props) {\r\n  const { tweet } = props;\r\n  return tweet.parent ? (\r\n    <Tweet\r\n      isRetweet\r\n      retweeter={props.retweeter}\r\n      className={\" \"}\r\n      tweet={tweet.parent}\r\n      hideActions\r\n    />\r\n  ) : null;\r\n}\r\n\r\nexport function Tweet(props) {\r\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props;\r\n  const [actionTweet, setActionTweet] = useState(\r\n    props.tweet ? props.tweet : null\r\n  );\r\n  let className = props.className ? props.className : \"col-10 mx-auto col-md-6\";\r\n  className =\r\n    isRetweet === true ? `${className} p-2 border rounded` : className;\r\n  var path = window.location.pathname;\r\n  var match = path.match(/(?<tweetid>\\d+)/);\r\n  var urltweetId = match ? match.groups.tweetid : -1;\r\n  const isDetail = `${tweet.id}` === `${urltweetId}`;\r\n  const handleLink = (event) => {\r\n    event.preventDefault();\r\n    window.location.href = `/${tweet.id}`;\r\n  };\r\n  const handlePerformAction = (newActionTweet, status) => {\r\n    if (status === 200) {\r\n      setActionTweet(newActionTweet);\r\n    } else if (status === 201) {\r\n      // let the tweet list know\r\n      if (didRetweet) {\r\n        didRetweet(newActionTweet);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className={className}>\r\n      {isRetweet === true && (\r\n        <div className=\"mb-2\">\r\n          <span className=\"small text-muted\">\r\n            Retweet via <UserDisplay user={retweeter} />\r\n          </span>\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex\">\r\n        <div className=\"\">\r\n          <UserPicture user={tweet.user} />\r\n        </div>\r\n        <div className=\"col-11\">\r\n          <div>\r\n            <p>\r\n              <UserDisplay includeFullName user={tweet.user} />\r\n            </p>\r\n            <p>{tweet.content}</p>\r\n          </div>\r\n          <ParentTweet tweet={tweet} retweeter={tweet.user} />\r\n\r\n          <div className=\"btn btn-group px-0\">\r\n            {actionTweet && hideActions !== true && (\r\n              <React.Fragment>\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformACtion={handlePerformAction}\r\n                  action={{ type: \"like\", display: \"Likes\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformACtion={handlePerformAction}\r\n                  action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                />\r\n                <ActionBtn\r\n                  tweet={actionTweet}\r\n                  didPerformACtion={handlePerformAction}\r\n                  action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n            {isDetail === true ? null : (\r\n              <button\r\n                className=\"btn btn-outline-primary btn-sm\"\r\n                onClick={handleLink}\r\n              >\r\n                View\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiTweetList } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function TweetList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const final = [...props.newTweets.concat(tweetsInit)];\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweetsInit, tweets]);\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          // const finalTweetsInit = [...response].concat(tweetsInit);\r\n          setNextUrl(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        } else {\r\n          alert(\"There was an error\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(newTweet);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          const newTweets = [...tweets].concat(response.results);\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        } else {\r\n          alert(\"There was an error\");\r\n        }\r\n      };\r\n      apiTweetList(props.username, handleLoadNextResponse, nextUrl);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-${item.id}`}\r\n          />\r\n        );\r\n      })}\r\n      {nextUrl !== null && (\r\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\r\n          Load Next\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { apiTweetFeed } from \"./lookup\";\r\nimport { Tweet } from \"./detail\";\r\n\r\nexport function FeedList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n  const [nextUrl, setNextUrl] = useState(null);\r\n  const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const final = [...props.newTweets.concat(tweetsInit)];\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweetsInit, tweets]);\r\n  useEffect(() => {\r\n    if (tweetsDidSet === false) {\r\n      const handleTweetListLookup = (response, status) => {\r\n        if (status === 200) {\r\n          // const finalTweetsInit = [...response].concat(tweetsInit);\r\n          setNextUrl(response.next);\r\n          setTweetsInit(response.results);\r\n          setTweetsDidSet(true);\r\n        }\r\n      };\r\n      apiTweetFeed(handleTweetListLookup);\r\n    }\r\n  }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n\r\n  const handleDidRetweet = (newTweet) => {\r\n    const updateTweetsInit = [...tweetsInit];\r\n    updateTweetsInit.unshift(newTweet);\r\n    setTweetsInit(updateTweetsInit);\r\n    const updateFinalTweets = [...tweets];\r\n    updateFinalTweets.unshift(newTweet);\r\n    setTweets(updateFinalTweets);\r\n  };\r\n\r\n  const handleLoadNext = (event) => {\r\n    event.preventDefault();\r\n    if (nextUrl !== null) {\r\n      const handleLoadNextResponse = (response, status) => {\r\n        if (status === 200) {\r\n          setNextUrl(response.next);\r\n          const newTweets = [...tweets].concat(response.results);\r\n          setTweetsInit(newTweets);\r\n          setTweets(newTweets);\r\n        }\r\n      };\r\n      apiTweetFeed(handleLoadNextResponse, nextUrl);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n            key={`${index}-${item.id}`}\r\n          />\r\n        );\r\n      })}\r\n      {nextUrl !== null && (\r\n        <button onClick={handleLoadNext} className=\"btn btn-outline-primary\">\r\n          Load Next\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { TweetCreate } from \"./create\";\r\nimport { TweetList } from \"./list\";\r\nimport { FeedList } from \"./feed\";\r\nimport { Tweet } from \"./detail\";\r\nimport { apiTweetDetail } from \"./lookup\";\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <FeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweets] = useState([]);\r\n\r\n  const canTweet = props.canTweet === \"false\" ? false : true;\r\n  const handleNewTweet = (newTweet) => {\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweets(tempNewTweets);\r\n  };\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {canTweet === true && (\r\n        <TweetCreate didTweet={handleNewTweet} className=\"col-12 mb-3\" />\r\n      )}\r\n      <TweetList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent(props) {\r\n  const { tweetId } = props;\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [tweet, setTweet] = useState(null);\r\n\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setTweet(response);\r\n    } else {\r\n      alert(\"There was an error finding your tweet\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiTweetDetail(tweetId, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup]);\r\n\r\n  return tweet === null ? null : (\r\n    <Tweet tweet={tweet} className={props.className} />\r\n  );\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { TweetsComponent } from \"./tweets\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { FeedComponent, TweetsComponent, TweetDetailComponent } from \"./tweets\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst appEl = document.getElementById(\"root\");\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\n\nconst e = React.createElement;\nconst tweetsEl = document.getElementById(\"tweetme\");\nif (tweetsEl) {\n  ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-feed\");\nif (tweetFeedEl) {\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-detail\");\ntweetDetailElements.forEach((container) => {\n  ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}