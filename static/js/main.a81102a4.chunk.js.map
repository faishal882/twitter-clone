{"version":3,"sources":["logo.svg","tweets/component.js","lookup/component.js","App.js","reportWebVitals.js","index.js"],"names":["TweetsComponent","props","textAreaRef","React","createRef","useState","newTweets","setNewTweets","className","onSubmit","event","preventDefault","newVal","current","value","tempNewTweets","unshift","content","likes","id","ref","required","name","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","console","log","message","send","loadTweets","alert","map","item","index","Tweet","tweet","ActionBtn","action","setLikes","userLike","setUserLike","actionDiplay","display","type","onClick","App","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","appEl","document","getElementById","ReactDOM","render","tweetsEl"],"mappings":"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","file":"static/js/main.a81102a4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useEffect, useState } from \"react\";\r\nimport { loadTweets } from \"../lookup\";\r\n\r\nexport function TweetsComponent(props) {\r\n  const textAreaRef = React.createRef();\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const newVal = textAreaRef.current.value;\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift({\r\n      content: newVal,\r\n      likes: 0,\r\n      id: 234,\r\n    });\r\n    setNewTweets(tempNewTweets);\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <div className=\"col-12 mb-3\">\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea\r\n            ref={textAreaRef}\r\n            required={true}\r\n            className=\"form-control\"\r\n            name=\"tweet\"\r\n          ></textarea>\r\n          <button className=\"btn btn-primary my-3\">Tweet</button>\r\n        </form>\r\n      </div>\r\n      <TweetList newTweets={newTweets} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const final = [...props.newTweets.concat(tweetsInit)];\r\n    if (final.length !== tweets.length) {\r\n      setTweets(final);\r\n    }\r\n  }, [props.newTweets, tweetsInit, tweets]);\r\n  useEffect(() => {\r\n    const myCallback = (response, status) => {\r\n      if (status === 200) {\r\n        // const finalTweetsInit = [...response].concat(tweetsInit);\r\n        setTweetsInit(response);\r\n      } else {\r\n        alert(\"There was an error\");\r\n      }\r\n    };\r\n    loadTweets(myCallback);\r\n  }, [tweetsInit]);\r\n  return tweets.map((item, index) => {\r\n    return (\r\n      <Tweet\r\n        tweet={item}\r\n        className=\"my-5 py-5 border bg-white text-dark\"\r\n        key={`${index}-${item.id}`}\r\n      />\r\n    );\r\n  });\r\n}\r\n\r\nexport function ActionBtn(props) {\r\n  const { tweet, action } = props;\r\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n  const [userLike, setUserLike] = useState(\r\n    tweet.userLike === true ? false : true\r\n  );\r\n  const className = props.className\r\n    ? props.className\r\n    : \"btn btn-primary btn-sm\";\r\n  const actionDiplay = action.display ? action.display : \"Action\";\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    if (action.type === \"like\") {\r\n      if (userLike === true) {\r\n        setLikes(likes - 1);\r\n        setUserLike(false);\r\n      } else {\r\n        setLikes(likes + 1);\r\n        setUserLike(true);\r\n      }\r\n    }\r\n  };\r\n  const display =\r\n    action.type === \"like\" ? `${likes} ${actionDiplay}` : actionDiplay;\r\n\r\n  return (\r\n    <button className={className} onClick={handleClick}>\r\n      {display}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function Tweet(props) {\r\n  const { tweet } = props;\r\n  const className = props.className\r\n    ? props.className\r\n    : \"col-10 mx-auto col-md-6\";\r\n  return (\r\n    <div className={className}>\r\n      <p>\r\n        {tweet.id} - {tweet.content}\r\n      </p>\r\n      <div className=\"btn btn-group\">\r\n        <ActionBtn tweet={tweet} action={{ type: \"like\", display: \"Likes\" }} />\r\n        <ActionBtn\r\n          tweet={tweet}\r\n          action={{ type: \"unlike\", display: \"Unlike\" }}\r\n        />\r\n        <ActionBtn\r\n          tweet={tweet}\r\n          action={{ type: \"retweet\", display: \"Retweet\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function loadTweets(callback) {\r\n  const xhr = new XMLHttpRequest();\r\n  const method = \"GET\";\r\n  const url = \"http://127.0.0.1:8000/api/tweets/\";\r\n  const responseType = \"json\";\r\n  xhr.responseType = responseType;\r\n  xhr.open(method, url);\r\n  xhr.onload = function () {\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n  xhr.onerror = function (e) {\r\n    console.log(e);\r\n    callback({ message: \"The request was an error\" }, 400);\r\n  };\r\n\r\n  xhr.send();\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { TweetsComponent } from \"./tweets\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { TweetsComponent } from \"./tweets\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst appEl = document.getElementById(\"root\");\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst tweetsEl = document.getElementById(\"tweetme\");\nif (tweetsEl) {\n  ReactDOM.render(<TweetsComponent />, tweetsEl);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}